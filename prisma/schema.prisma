// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          String    @default("user") // "user" or "admin"
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  shipments     Shipment[] // Admin can manage shipments
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Shipment {
  id                String   @id @default(cuid())
  trackingId        String   @unique
  status            String   @default("pending") // pending, in_transit, out_for_delivery, delivered, failed
  estimatedDelivery DateTime?
  deliveryStartTime String?  // e.g., "11:30 AM"
  deliveryEndTime   String?  // e.g., "3:30 PM"
  signatureRequired Boolean  @default(false)
  fromLocation      String
  toLocation        String
  
  // Service Details
  serviceType       String   @default("FedEx Ground") // FedEx Ground, FedEx Express, etc.
  terms             String   @default("Third Party") // Third Party, Prepaid, etc.
  
  // Package Details
  weight            String?  // e.g., "21.2 lbs / 9.62 kgs"
  dimensions        String?  // e.g., "43x32x1 in."
  totalPieces       Int      @default(1)
  packaging         String   @default("Package") // Package, Envelope, etc.
  
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  events            TrackingEvent[]
  managedBy         User?    @relation(fields: [managerId], references: [id])
  managerId         String?
}

model TrackingEvent {
  id          String   @id @default(cuid())
  shipmentId  String
  shipment    Shipment @relation(fields: [shipmentId], references: [id], onDelete: Cascade)
  eventType   String   // label_created, package_received, in_transit, out_for_delivery, delivered
  location    String
  description String
  timestamp   DateTime @default(now())
  status      String   // completed, in_progress, pending
  order       Int      // For timeline ordering
}
